import Head from "next/head";
import Header from "../components/Header";
import Nav from "../components/Nav";
import { useRouter } from "next/router";
import {
  HomeIcon,
  LightningBoltIcon,
  BadgeCheckIcon,
  CollectionIcon,
  SearchIcon,
  UserIcon,
} from "@heroicons/react/outline";
import Results from "../components/Results";

export default function Home({ fetch_details_list }) {
  const header_labels = [
    "home",
    "trending",
    "verified",
    "collections",
    "search",
    "account",
  ];
  const header_icons_label = [
    HomeIcon,
    LightningBoltIcon,
    BadgeCheckIcon,
    CollectionIcon,
    SearchIcon,
    UserIcon,
  ];
  const genre_list = [
    { id: 28, name: "Action" },
    { id: 12, name: "Adventure" },
    { id: 16, name: "Animation" },
    { id: 35, name: "Comedy" },
    { id: 80, name: "Crime" },
    { id: 99, name: "Documentary" },
    { id: 18, name: "Drama" },
    { id: 10751, name: "Family" },
    { id: 14, name: "Fantasy" },
    { id: 36, name: "History" },
    { id: 27, name: "Horror" },
    { id: 10402, name: "Music" },
    { id: 9648, name: "Mystery" },
    { id: 10749, name: "Romance" },
    { id: 878, name: "Science Fiction" },
    { id: 10770, name: "TV Movie" },
    { id: 53, name: "Thriller" },
    { id: 10752, name: "War" },
    { id: 37, name: "Western" },
  ];
  return (
    <div>
      <Head>
        <title>Hulu 2.0</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header
        header_labels={header_labels}
        header_icons_label={header_icons_label}
      />

      <Nav genre_list={genre_list} />

      <Results fetch_details_list={fetch_details_list} />
    </div>
  );
}

export async function getServerSideProps(context) {
  const genre_list = [
    { id: 28, name: "Action" },
    { id: 12, name: "Adventure" },
    { id: 16, name: "Animation" },
    { id: 35, name: "Comedy" },
    { id: 80, name: "Crime" },
    { id: 99, name: "Documentary" },
    { id: 18, name: "Drama" },
    { id: 10751, name: "Family" },
    { id: 14, name: "Fantasy" },
    { id: 36, name: "History" },
    { id: 27, name: "Horror" },
    { id: 10402, name: "Music" },
    { id: 9648, name: "Mystery" },
    { id: 10749, name: "Romance" },
    { id: 878, name: "Science Fiction" },
    { id: 10770, name: "TV Movie" },
    { id: 53, name: "Thriller" },
    { id: 10752, name: "War" },
    { id: 37, name: "Western" },
  ];
  const { query } = context;
  let requested_genre = genre_list.find(
    (element) => element.name === query.genre
  );
  console.log(query);
  if (requested_genre) {
    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_genres=${requested_genre.id}`;
    const fetch_details = await fetch(url);
    const fetch_details_list = await fetch_details.json();
    // console.log(fetch_details_list);

    return {
      props: { fetch_details_list }, // will be passed to the page component as props
    };
  } else {
    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_genres=28`;
    const fetch_details = await fetch(url);
    const fetch_details_list = await fetch_details.json();
    // console.log(fetch_details_list);

    return {
      props: { fetch_details_list }, // will be passed to the page component as props
    };
  }
}
